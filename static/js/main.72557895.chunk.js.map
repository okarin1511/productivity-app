{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodo","useState","id","task","completed","todo","setTodo","className","onSubmit","e","preventDefault","trim","v4","TextField","label","name","type","value","onChange","target","Button","Todo","toggleComplete","removeTodo","ListItem","class","Checkbox","onClick","IconButton","TodoList","todos","List","map","App","setTodos","Typography","style","padding","variant","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAwCeA,MApCf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACHC,mBAAS,CAC7BC,GAAI,GACJC,KAAM,GACNC,WAAW,IAJY,mBACpBC,EADoB,KACdC,EADc,KAoB3B,OACI,uBAAMC,UAAU,YAAYC,SAVhC,SAAsBC,GAClBA,EAAEC,iBACEL,EAAKF,KAAKQ,SACVX,EAAQ,2BAAKK,GAAN,IAAYH,GAAIU,iBAEvBN,EAAQ,2BAAKD,GAAN,IAAYF,KAAM,QAK7B,UACI,cAACU,EAAA,EAAD,CACIC,MAAM,OACNC,KAAO,OACPC,KAAO,OACPC,MAASZ,EAAKF,KACde,SApBZ,SAA+BT,GAC3BH,EAAQ,2BAAKD,GAAN,IAAYF,KAAMM,EAAEU,OAAOF,YAqB9B,cAACG,EAAA,EAAD,CAAQJ,KAAO,SAAf,wB,4CCCGK,MA9Bf,YAAqD,IAArChB,EAAoC,EAApCA,KAAMiB,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WASlC,OAEI,qBAAKhB,UAAY,SAAjB,SACI,eAACiB,EAAA,EAAD,CAAUC,MAAQ,WAAlB,UACI,cAACC,EAAA,EAAD,CACIV,KAAK,WACLW,QAdhB,WACGL,EAAejB,EAAKH,OAgBVG,EAAKF,KAEN,cAACyB,EAAA,EAAD,CAAYD,QAfxB,WACIJ,EAAWlB,EAAKH,KAcR,SACI,cAAC,IAAD,Y,SCPL2B,MAdf,YAA0D,IAAtCC,EAAqC,EAArCA,MAAOR,EAA8B,EAA9BA,eAAgBC,EAAc,EAAdA,WACvC,OACI,cAACQ,EAAA,EAAD,UACKD,EAAME,KAAI,SAAA3B,GAAI,OACX,cAAC,EAAD,CACAA,KAAMA,EACNiB,eAAgBA,EAChBC,WAAcA,GAHHlB,EAAKH,U,SCsCjB+B,MAxCf,WAAgB,IAAD,EACahC,mBAAS,IADtB,mBACN6B,EADM,KACCI,EADD,KA0Bb,OACE,sBAAK3B,UAAU,MAAf,UACI,cAAC4B,EAAA,EAAD,CAAYC,MAAS,CAAEC,QAAS,IAAMC,QAAU,KAAhD,wBAGA,cAAC,EAAD,CAAUtC,QA5BhB,SAAiBK,GACf6B,EAAS,CAAC7B,GAAF,mBAAWyB,QA4Bf,cAAC,EAAD,CAAUA,MAAOA,EACjBR,eA1BN,SAAwBpB,GACtBgC,EACEJ,EAAME,KAAI,SAAA3B,GACR,OAAIA,EAAKH,KAAOA,EACP,2BACFG,GADL,IAEED,WAAYC,EAAKD,YAGdC,OAkBPkB,WAZN,SAAoBrB,GAClBgC,EAASJ,EAAMS,QAAO,SAAAlC,GAAI,OAAIA,EAAKH,KAAOA,aCjB/BsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.72557895.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {v4 as uuid, v4} from \"uuid\";\r\nimport { Button, TextField } from \"@material-ui/core\"; \r\n\r\nfunction TodoForm({ addTodo }) {\r\n    const [todo, setTodo] = useState({\r\n        id: \"\",\r\n        task: \"\",\r\n        completed: false\r\n    });\r\n\r\n    function handleTaskInputChange(e) {\r\n        setTodo({ ...todo, task: e.target.value });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (todo.task.trim()) {\r\n            addTodo({ ...todo, id: v4( ) });\r\n            // reset task input\r\n            setTodo({ ...todo, task: \"\" });\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Task\" \r\n                name = \"task\"\r\n                type = \"text\"\r\n                value = {todo.task}\r\n                onChange={handleTaskInputChange} \r\n            />\r\n            <Button type = \"submit\">Submit</Button>\r\n\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default TodoForm;","import React from \"react\";\r\nimport { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction Todo({ todo, toggleComplete, removeTodo }) {\r\n    function handleCheckboxClick() {\r\n       toggleComplete(todo.id); \r\n    }\r\n\r\n    function handleRemoveClick() {\r\n        removeTodo(todo.id);\r\n    }\r\n\r\n    return ( \r\n\r\n        <div className = \"okarin\">\r\n            <ListItem class = \"taskDone\">\r\n                <Checkbox \r\n                    type=\"checkbox\" \r\n                    onClick={handleCheckboxClick} \r\n                />\r\n            \r\n                {todo.task}\r\n            \r\n                <IconButton onClick={handleRemoveClick}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </ListItem>\r\n        </div>\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nimport { List } from \"@material-ui/core\";\r\n\r\nfunction TodoList({ todos, toggleComplete, removeTodo }) {\r\n    return (\r\n        <List>\r\n            {todos.map(todo => (\r\n                <Todo key={todo.id} \r\n                todo={todo} \r\n                toggleComplete={toggleComplete}\r\n                removeTodo = {removeTodo} \r\n                />\r\n            ))}\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React, { useState } from \"react\";\nimport './App.css';\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n  function addTodo(todo) {\n    setTodos([todo, ...todos]);\n  } \n\n  function toggleComplete(id) {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n\n      })\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n        <Typography style = {{ padding: 16 }} variant = \"h1\">\n          To-Do List\n        </Typography>\n        <TodoForm addTodo={ addTodo } />\n        <TodoList todos={todos} \n        toggleComplete={toggleComplete} \n        removeTodo={removeTodo}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}